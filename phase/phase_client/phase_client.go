package main

import (
	"context"
	"fmt"
	"log"
	"os"
	"time"

	"google.golang.org/grpc"

	pb "phase"
)

type InitType struct {
	FLUID []*pb.OneComponent
	BIPs  []*pb.OneBIP
}

func main() {
	serverAddress := "localhost:50051"

	conn, err := grpc.Dial(serverAddress, grpc.WithInsecure(), grpc.WithBlock())
	if err != nil {
		log.Fatalf("Failed to connect to the server: %v", err)
	}

	defer conn.Close()

	client := pb.NewPhaseEqualibriumClient(conn)

	var inData InitType
	//Mixture 3666.9
	inData = InitType{
		FLUID: []*pb.OneComponent{
			// {Component: "N2"   	, 		MoleFraction: 	0.000000000000001, MolMass: 28.020		, 	Tcr: 	126.200000		, Pcr: 3.394388		, WFact: 0.040000		, Tb: 0.000, Vcr: 89.800000			, Pen: 0.920	},
			// {Component: "CO2"  	, 		MoleFraction:	0.006296245000000, MolMass: 44.010		, 	Tcr: 	304.199950		, Pcr: 7.376459		, WFact: 0.225000		, Tb: 0.000, Vcr: 94.000000			, Pen: 3.028	},
			// {Component: "C1"   	,		MoleFraction: 	0.843781800000000, MolMass: 16.040		, 	Tcr: 	190.600000		, Pcr: 4.600155		, WFact: 0.008000		, Tb: 0.000, Vcr: 99.000000			, Pen: 0.630	},
			// {Component: "C2"   	,		MoleFraction: 	0.072963240000000, MolMass: 30.070		, 	Tcr: 	305.399960		, Pcr: 4.883864		, WFact: 0.098000		, Tb: 0.000, Vcr: 148.000000		, Pen: 2.630	},
			// {Component: "C3"   	,		MoleFraction: 	0.029246490000000, MolMass: 44.090		, 	Tcr: 	369.799960		, Pcr: 4.245517		, WFact: 0.152000		, Tb: 0.000, Vcr: 203.000000		, Pen: 5.060	},
			// {Component: "i-C4"   , 		MoleFraction: 	0.005984282000000, MolMass: 58.120		, 	Tcr: 	408.100100		, Pcr: 3.647701		, WFact: 0.176000		, Tb: 0.000, Vcr: 263.000000		, Pen: 7.290	},
			// {Component: "n-С4"   , 		MoleFraction: 	0.007934048000000, MolMass: 58.120		, 	Tcr: 	425.200100		, Pcr: 3.799688		, WFact: 0.193000		, Tb: 0.000, Vcr: 255.000000		, Pen: 7.860	},
			// {Component: "i-C5"   , 		MoleFraction: 	0.002593689000000, MolMass: 72.150		, 	Tcr: 	460.399900		, Pcr: 3.384255		, WFact: 0.227000		, Tb: 0.000, Vcr: 306.000000		, Pen: 10.930	},
			// {Component: "n-С5"   , 		MoleFraction: 	0.002426709000000, MolMass: 72.150		, 	Tcr: 	469.600000		, Pcr: 3.374123		, WFact: 0.251000		, Tb: 0.000, Vcr: 304.000000		, Pen: 12.180	},
			// {Component: "С6"   	, 		MoleFraction: 	0.003105627000000, MolMass: 80.350		, 	Tcr: 	502.987199		, Pcr: 4.063740		, WFact: 0.349294		, Tb: 0.000, Vcr: 372.399898		, Pen: 0.000	},
			// {Component: "С7"    	, 		MoleFraction: 	0.004101508000000, MolMass: 93.873		, 	Tcr: 	538.725348		, Pcr: 3.492529		, WFact: 0.402856		, Tb: 0.000, Vcr: 421.968268		, Pen: 0.000	},
			// {Component: "С8"    	, 		MoleFraction: 	0.005377355000000, MolMass: 107.873		,	Tcr: 	566.089541		, Pcr: 3.080357		, WFact: 0.458660		, Tb: 0.000, Vcr: 474.159756		, Pen: 0.000	},
			// {Component: "С9"    	, 		MoleFraction: 	0.003112627000000, MolMass: 121.873		,	Tcr: 	587.838190		, Pcr: 2.779215		, WFact: 0.513882		, Tb: 0.000, Vcr: 527.241084		, Pen: 0.000	},
			// {Component: "С10"    , 		MoleFraction:	0.002447706000000, MolMass: 135.873		,	Tcr: 	606.161317		, Pcr: 2.550300		, WFact: 0.567714		, Tb: 0.000, Vcr: 581.212252		, Pen: 0.000	},
			// {Component: "С11"    , 		MoleFraction:	0.001489821000000, MolMass: 149.873		,	Tcr: 	622.276784		, Pcr: 2.370995		, WFact: 0.619505		, Tb: 0.000, Vcr: 636.073260		, Pen: 0.000	},
			// {Component: "С12"    , 		MoleFraction:	0.001197856000000, MolMass: 163.873		,	Tcr: 	636.905676		, Pcr: 2.227222		, WFact: 0.668761		, Tb: 0.000, Vcr: 691.824107		, Pen: 0.000	},
			// {Component: "С13"    , 		MoleFraction:	0.001059873000000, MolMass: 177.873		,	Tcr: 	650.497019		, Pcr: 2.109762		, WFact: 0.715134		, Tb: 0.000, Vcr: 748.464795		, Pen: 0.000	},
			// {Component: "С14"    , 		MoleFraction:	0.000915890100000, MolMass: 191.873		,	Tcr: 	663.342268		, Pcr: 2.012322		, WFact: 0.758409		, Tb: 0.000, Vcr: 805.995323		, Pen: 0.000	},
			// {Component: "С15"    , 		MoleFraction:	0.000835899700000, MolMass: 205.873		,	Tcr: 	675.637290		, Pcr: 1.930461		, WFact: 0.798479		, Tb: 0.000, Vcr: 864.415691		, Pen: 0.000	},
			// {Component: "С16"    , 		MoleFraction:	0.000736911600000, MolMass: 219.873		,	Tcr: 	687.517651		, Pcr: 1.860955		, WFact: 0.835330		, Tb: 0.000, Vcr: 923.725899		, Pen: 0.000	},
			// {Component: "С17"    , 		MoleFraction:	0.000523937100000, MolMass: 233.873		,	Tcr: 	699.079602		, Pcr: 1.801404		, WFact: 0.869019		, Tb: 0.000, Vcr: 983.925947		, Pen: 0.000	},
			// {Component: "С18"    , 		MoleFraction:	0.000559932800000, MolMass: 247.873		,	Tcr: 	710.393004		, Pcr: 1.749989		, WFact: 0.899657		, Tb: 0.000, Vcr: 1045.015835		, Pen: 0.000	},
			// {Component: "С19"    , 		MoleFraction: 	0.000362956400000, MolMass: 261.873		, 	Tcr: 	721.509559		, Pcr: 1.705300		, WFact: 0.927392		, Tb: 0.000, Vcr: 1106.995563		, Pen: 0.000	},
			// {Component: "С20"    , 		MoleFraction:	0.000388953300000, MolMass: 275.873		, 	Tcr: 	732.468191		, Pcr: 1.666233		, WFact: 0.952399		, Tb: 0.000, Vcr: 1169.865131		, Pen: 0.000	},
			// {Component: "С21"    , 		MoleFraction: 	0.000330960300000, MolMass: 289.873		, 	Tcr: 	743.298661		, Pcr: 1.631908		, WFact: 0.974867		, Tb: 0.000, Vcr: 1233.624538		, Pen: 0.000	},
			// {Component: "С22"    , 		MoleFraction: 	0.000237000000000, MolMass: 303.873		, 	Tcr: 	754.024033		, Pcr: 1.601614		, WFact: 0.994992		, Tb: 0.000, Vcr: 1298.273786		, Pen: 0.0		},
			// {Component: "С23"    , 		MoleFraction: 	0.000246000000000, MolMass: 317.873		, 	Tcr: 	764.662408		, Pcr: 1.574774		, WFact: 1.012969		, Tb: 0.000, Vcr: 1363.812874		, Pen: 0.0		},
			// {Component: "С24"    , 		MoleFraction: 	0.000215000000000, MolMass: 331.873		, 	Tcr: 	775.228152		, Pcr: 1.550911		, WFact: 1.028989		, Tb: 0.000, Vcr: 1430.241802		, Pen: 0.0		},
			// {Component: "С25"    , 		MoleFraction: 	0.000188000000000, MolMass: 345.873		, 	Tcr: 	785.732782		, Pcr: 1.529630		, WFact: 1.043237		, Tb: 0.000, Vcr: 1497.560570		, Pen: 0.0		},
			// {Component: "С26"    , 		MoleFraction: 	0.000162000000000, MolMass: 359.873		, 	Tcr: 	796.185622		, Pcr: 1.510598		, WFact: 1.055884		, Tb: 0.000, Vcr: 1565.769178		, Pen: 0.0		},
			// {Component: "С27"    , 		MoleFraction: 	0.000144000000000, MolMass: 373.873		, 	Tcr: 	806.594281		, Pcr: 1.493537		, WFact: 1.067093		, Tb: 0.000, Vcr: 1634.867626		, Pen: 0.0		},
			// {Component: "С28"    , 		MoleFraction: 	0.000126000000000, MolMass: 387.873		, 	Tcr: 	816.965021		, Pcr: 1.478208		, WFact: 1.077014		, Tb: 0.000, Vcr: 1704.855914		, Pen: 0.0		},
			// {Component: "С29"    , 		MoleFraction: 	0.000111000000000, MolMass: 401.873		, 	Tcr: 	827.303033		, Pcr: 1.464408		, WFact: 1.085783		, Tb: 0.000, Vcr: 1775.734041		, Pen: 0.0		},
			// {Component: "С30"    , 		MoleFraction: 	0.000095000000000, MolMass: 415.873		, 	Tcr: 	837.612650		, Pcr: 1.451963		, WFact: 1.093527		, Tb: 0.000, Vcr: 1847.502009		, Pen: 0.0		},
			// {Component: "С31"    , 		MoleFraction: 	0.000081000000000, MolMass: 429.873		, 	Tcr: 	847.897508		, Pcr: 1.440721		, WFact: 1.100358		, Tb: 0.000, Vcr: 1920.159817		, Pen: 0.0		},
			// {Component: "С32"    , 		MoleFraction:	0.000069000000000, MolMass: 443.873		, 	Tcr: 	858.160683		, Pcr: 1.430552		, WFact: 1.106380		, Tb: 0.000, Vcr: 1993.707465		, Pen: 0.0		},
			// {Component: "С33"    , 		MoleFraction:	0.000060000000000, MolMass: 457.873		, 	Tcr: 	868.404784		, Pcr: 1.421340		, WFact: 1.111684		, Tb: 0.000, Vcr: 2068.144953		, Pen: 0.0		},
			// {Component: "С34"    , 		MoleFraction:	0.000052000000000, MolMass: 471.873		, 	Tcr: 	878.632042		, Pcr: 1.412987		, WFact: 1.116352		, Tb: 0.000, Vcr: 2143.472281		, Pen: 0.0		},
			// {Component: "С35"    , 		MoleFraction:	0.000045000000000, MolMass: 485.873		, 	Tcr: 	888.844370		, Pcr: 1.405403		, WFact: 1.120460		, Tb: 0.000, Vcr: 2219.689449		, Pen: 0.0		},
			// {Component: "C36"    , 		MoleFraction:	0.000053000000000, MolMass: 499.873		, 	Tcr: 	899.043416		, Pcr: 1.398512		, WFact: 1.124072		, Tb: 0.000, Vcr: 2296.796457		, Pen: 0.0		},
			// {Component: "C37"    , 		MoleFraction:	0.000046000000000, MolMass: 513.873		, 	Tcr: 	909.230609		, Pcr: 1.392243		, WFact: 1.127246		, Tb: 0.000, Vcr: 2374.793304		, Pen: 0.0		},
			// {Component: "C38"    , 		MoleFraction:	0.000040000000000, MolMass: 527.873		, 	Tcr: 	919.407188		, Pcr: 1.386538		, WFact: 1.130036		, Tb: 0.000, Vcr: 2453.679992		, Pen: 0.0		},
			// {Component: "C39"    , 		MoleFraction:	0.000034000000000, MolMass: 541.873		, 	Tcr: 	929.574236		, Pcr: 1.381340		, WFact: 1.132486		, Tb: 0.000, Vcr: 2533.456520		, Pen: 0.0		},
			// {Component: "C40"    , 		MoleFraction:	0.000030000000000, MolMass: 555.873		, 	Tcr: 	939.732702		, Pcr: 1.376602		, WFact: 1.134638		, Tb: 0.000, Vcr: 2614.122888		, Pen: 0.0		},
			// {Component: "C41"    , 		MoleFraction: 	0.000026000000000, MolMass: 569.873		, 	Tcr: 	949.883418		, Pcr: 1.372280		, WFact: 1.136526		, Tb: 0.000, Vcr: 2695.679096		, Pen: 0.0		},
			// {Component: "C42"    , 		MoleFraction:	0.000022000000000, MolMass: 583.873		, 	Tcr: 	960.027118		, Pcr: 1.368336		, WFact: 1.138184		, Tb: 0.000, Vcr: 2778.125144		, Pen: 0.0		},
			// {Component: "C43"    , 		MoleFraction: 	0.000019000000000, MolMass: 597.873		, 	Tcr: 	970.164453		, Pcr: 1.364734		, WFact: 1.139639		, Tb: 0.000, Vcr: 2861.461032		, Pen: 0.0		},
			// {Component: "C44"    , 		MoleFraction: 	0.000017000000000, MolMass: 611.873		, 	Tcr: 	980.295997		, Pcr: 1.361444		, WFact: 1.140915		, Tb: 0.000, Vcr: 2945.686760		, Pen: 0.0		},
			// {Component: "C45"    , 		MoleFraction: 	0.000015000000000, MolMass: 625.873		, 	Tcr: 	990.422263		, Pcr: 1.358438		, WFact: 1.142035		, Tb: 0.000, Vcr: 3030.802328		, Pen: 0.0		},
			// {Component: "C46"    , 		MoleFraction: 	0.000013000000000, MolMass: 639.873		, 	Tcr: 	1000.543708		, Pcr: 1.355689		, WFact: 1.143017		, Tb: 0.000, Vcr: 3116.807735		, Pen: 0.0		},
			// {Component: "C47"    , 		MoleFraction: 	0.000010891900000, MolMass: 653.873		, 	Tcr: 	1010.660740		, Pcr: 1.353175		, WFact: 1.143878		, Tb: 0.000, Vcr: 3203.702983		, Pen: 0.0		},
			// {Component: "C48"    , 		MoleFraction: 	0.000009432834000, MolMass: 667.873		, 	Tcr: 	1020.773726		, Pcr: 1.350874		, WFact: 1.144634		, Tb: 0.000, Vcr: 3291.488071		, Pen: 0.0		},
			// {Component: "C49"    , 		MoleFraction: 	0.000008169223000, MolMass: 681.873		, 	Tcr: 	1030.882994		, Pcr: 1.348769		, WFact: 1.145296		, Tb: 0.000, Vcr: 3380.162999		, Pen: 0.0		},
			// {Component: "C50"    , 		MoleFraction: 	0.000007074884000, MolMass: 695.873		, 	Tcr: 	1040.988840		, Pcr: 1.346842		, WFact: 1.145877		, Tb: 0.000, Vcr: 3469.727767		, Pen: 0.0		},
			// {Component: "C51"    , 		MoleFraction: 	0.000006127141000, MolMass: 709.873		, 	Tcr: 	1051.091532		, Pcr: 1.345078		, WFact: 1.146386		, Tb: 0.000, Vcr: 3560.182375		, Pen: 0.0		},
			// {Component: "C52"    , 		MoleFraction: 	0.000005306357000, MolMass: 723.873		, 	Tcr: 	1061.191311		, Pcr: 1.343462		, WFact: 1.146832		, Tb: 0.000, Vcr: 3651.526823		, Pen: 0.0		},
			// {Component: "C53"    , 		MoleFraction: 	0.000004595524000, MolMass: 737.873		, 	Tcr: 	1071.288397		, Pcr: 1.341982		, WFact: 1.147224		, Tb: 0.000, Vcr: 3743.761111		, Pen: 0.0		},
			// {Component: "C54"    , 		MoleFraction:	0.000003979913000, MolMass: 751.873		, 	Tcr: 	1081.382987		, Pcr: 1.340626		, WFact: 1.147567		, Tb: 0.000, Vcr: 3836.885238		, Pen: 0.0		},
			// {Component: "C55"    , 		MoleFraction:	0.000003446769000, MolMass: 765.873		, 	Tcr: 	1091.475264		, Pcr: 1.339383		, WFact: 1.147867		, Tb: 0.000, Vcr: 3930.899206		, Pen: 0.0		},
			// {Component: "C56"    , 		MoleFraction:	0.000002985044000, MolMass: 779.873		, 	Tcr: 	1101.565391		, Pcr: 1.338244		, WFact: 1.148131		, Tb: 0.000, Vcr: 4025.803014		, Pen: 0.0		},
			// {Component: "C57"    , 		MoleFraction:	0.000002585171000, MolMass: 793.873		, 	Tcr: 	1111.653518		, Pcr: 1.337200		, WFact: 1.148362		, Tb: 0.000, Vcr: 4121.596662		, Pen: 0.0		},
			// {Component: "C58"    , 		MoleFraction:	0.000002238865000, MolMass: 807.873		, 	Tcr: 	1121.739784		, Pcr: 1.336243		, WFact: 1.148564		, Tb: 0.000, Vcr: 4218.280150		, Pen: 0.0		},
			// {Component: "C59"    , 		MoleFraction:	0.000001938949000, MolMass: 821.873		, 	Tcr: 	1131.824314		, Pcr: 1.335365		, WFact: 1.148742		, Tb: 0.000, Vcr: 4315.853478		, Pen: 0.0		},
			// {Component: "C60"    , 		MoleFraction:	0.000001679210000, MolMass: 835.873		, 	Tcr: 	1141.907222		, Pcr: 1.334561		, WFact: 1.148897		, Tb: 0.000, Vcr: 4414.316646		, Pen: 0.0		},
			// {Component: "C61"    , 		MoleFraction:	0.000001454265000, MolMass: 849.873		, 	Tcr: 	1151.988616		, Pcr: 1.333823		, WFact: 1.149034		, Tb: 0.000, Vcr: 4513.669654		, Pen: 0.0		},
			// {Component: "C62"    , 		MoleFraction:	0.000001259453000, MolMass: 863.873		, 	Tcr: 	1162.068593		, Pcr: 1.333146		, WFact: 1.149153		, Tb: 0.000, Vcr: 4613.912501		, Pen: 0.0		},
			// {Component: "C63"    , 		MoleFraction: 	0.000001090739000, MolMass: 877.873		, 	Tcr: 	1172.147241		, Pcr: 1.332525		, WFact: 1.149258		, Tb: 0.000, Vcr: 4715.045189		, Pen: 0.0		},
			// {Component: "C64"    , 		MoleFraction:	0.000000944624600, MolMass: 891.873		, 	Tcr: 	1182.224645		, Pcr: 1.331955		, WFact: 1.149350		, Tb: 0.000, Vcr: 4817.067717		, Pen: 0.0		},
			// {Component: "C65"    , 		MoleFraction: 	0.000000818083800, MolMass: 905.873		, 	Tcr: 	1192.300880		, Pcr: 1.331433		, WFact: 1.149430		, Tb: 0.000, Vcr: 4919.980085		, Pen: 0.0		},
			// {Component: "C66"    , 		MoleFraction: 	0.000000708494300, MolMass: 919.873		, 	Tcr: 	1202.376017		, Pcr: 1.330953		, WFact: 1.149500		, Tb: 0.000, Vcr: 5023.782293		, Pen: 0.0		},
			// {Component: "C67"    , 		MoleFraction: 	0.000000613585300, MolMass: 933.873		, 	Tcr: 	1212.450121		, Pcr: 1.330514		, WFact: 1.149562		, Tb: 0.000, Vcr: 5128.474341		, Pen: 0.0		},
			// {Component: "C68"    ,		MoleFraction: 	0.000000531390100, MolMass: 947.873		, 	Tcr: 	1222.523253		, Pcr: 1.330110		, WFact: 1.149616		, Tb: 0.000, Vcr: 5234.056229		, Pen: 0.0		},
			// {Component: "C69"    ,		MoleFraction: 	0.000000460205800, MolMass: 961.873		, 	Tcr: 	1232.595469		, Pcr: 1.329740		, WFact: 1.149664		, Tb: 0.000, Vcr: 5340.527957		, Pen: 0.0		},
			// {Component: "C70"    ,		MoleFraction: 	0.000000398557200, MolMass: 975.873		, 	Tcr: 	1242.666821		, Pcr: 1.329400		, WFact: 1.149705		, Tb: 0.000, Vcr: 5447.889525		, Pen: 0.0		},
			// {Component: "C71"    ,		MoleFraction: 	0.000000345166900, MolMass: 989.873		, 	Tcr: 	1252.737358		, Pcr: 1.329088		, WFact: 1.149742		, Tb: 0.000, Vcr: 5556.140932		, Pen: 0.0		},
			// {Component: "C72"    , 		MoleFraction: 	0.000000298928800, MolMass: 1003.873	, 	Tcr: 	1262.807124		, Pcr: 1.328802		, WFact: 1.149774		, Tb: 0.000, Vcr: 5665.282180		, Pen: 0.0		},
			// {Component: "C73"    , 		MoleFraction: 	0.000000258884700, MolMass: 1017.873	, 	Tcr: 	1272.876163		, Pcr: 1.328539		, WFact: 1.149802		, Tb: 0.000, Vcr: 5775.313268		, Pen: 0.0		},
			// {Component: "C74"    , 		MoleFraction: 	0.000000224204800, MolMass: 1031.873	, 	Tcr: 	1282.944513		, Pcr: 1.328298		, WFact: 1.149826		, Tb: 0.000, Vcr: 5886.234196		, Pen: 0.0		},
			// {Component: "C75"    , 		MoleFraction: 	0.000000194170600, MolMass: 1045.873	, 	Tcr: 	1293.012211		, Pcr: 1.328077		, WFact: 1.149848		, Tb: 0.000, Vcr: 5998.044964		, Pen: 0.0		},
			// {Component: "C76"    ,		MoleFraction:	0.000000168159700, MolMass: 1059.873	, 	Tcr: 	1303.079290		, Pcr: 1.327874		, WFact: 1.149867		, Tb: 0.000, Vcr: 6110.745572		, Pen: 0.0		},
			// {Component: "C77"    ,		MoleFraction:	0.000000145633300, MolMass: 1073.873	, 	Tcr: 	1313.145784		, Pcr: 1.327687		, WFact: 1.149883		, Tb: 0.000, Vcr: 6224.336020		, Pen: 0.0		},
			// {Component: "C78"    ,		MoleFraction:	0.000000126124400, MolMass: 1087.873	, 	Tcr: 	1323.211722		, Pcr: 1.327516		, WFact: 1.149898		, Tb: 0.000, Vcr: 6338.816308		, Pen: 0.0		},
			// {Component: "C79"    ,		MoleFraction:	0.000000109228900, MolMass: 1101.873	, 	Tcr: 	1333.277132		, Pcr: 1.327359		, WFact: 1.149910		, Tb: 0.000, Vcr: 6454.186435		, Pen: 0.0		},
			// {Component: "C80"    ,		MoleFraction:	0.000000094596760, MolMass: 1115.873	, 	Tcr: 	1343.342041		, Pcr: 1.327215		, WFact: 1.149921		, Tb: 0.000, Vcr: 6570.446403		, Pen: 0.0		}},

			{Component: "N2", MoleFraction: 0.000000000000001, MolMass: 28.020, Tcr: 126.200000, Pcr: 3.394388, WFact: 0.04, Tb: -195.75, Vcr: 89.8, Pen: 0.92},
			{Component: "CO2", MoleFraction: 0.006296245000000, MolMass: 44.010, Tcr: 304.199950, Pcr: 7.376459, WFact: 0.225, Tb: -78.5, Vcr: 94, Pen: 3.028},
			{Component: "C1", MoleFraction: 0.843781800000000, MolMass: 16.040, Tcr: 190.600000, Pcr: 4.600155, WFact: 0.008, Tb: -161.55, Vcr: 99.00002, Pen: 0.63},
			{Component: "C2", MoleFraction: 0.072963240000000, MolMass: 30.070, Tcr: 305.399960, Pcr: 4.883864, WFact: 0.098, Tb: -88.55, Vcr: 148, Pen: 2.63},
			{Component: "C3", MoleFraction: 0.029246490000000, MolMass: 44.090, Tcr: 369.799960, Pcr: 4.245517, WFact: 0.152, Tb: -42.05, Vcr: 203, Pen: 5.059999},
			{Component: "iC4", MoleFraction: 0.005984282000000, MolMass: 58.120, Tcr: 408.100100, Pcr: 3.647701, WFact: 0.176, Tb: -11.75, Vcr: 263, Pen: 7.290001},
			{Component: "nC4", MoleFraction: 0.007934048000000, MolMass: 58.120, Tcr: 425.200100, Pcr: 3.799688, WFact: 0.193, Tb: -0.44993, Vcr: 255, Pen: 7.86},
			{Component: "iC5", MoleFraction: 0.002593689000000, MolMass: 72.150, Tcr: 460.399900, Pcr: 3.384255, WFact: 0.227, Tb: 27.85003, Vcr: 306, Pen: 10.93},
			{Component: "nC5", MoleFraction: 0.002426709000000, MolMass: 72.150, Tcr: 469.600000, Pcr: 3.374123, WFact: 0.251, Tb: 36.0501, Vcr: 304.0001, Pen: 12.18},
			{Component: "C6", MoleFraction: 0.003105627000000, MolMass: 80.350, Tcr: 502.987199, Pcr: 2.968823, WFact: 0.296, Tb: 68.75005, Vcr: 370.0001, Pen: 17.98},
			{Component: "C7", MoleFraction: 0.004101508000000, MolMass: 93.873, Tcr: 538.725348, Pcr: 3.574564, WFact: 0.436319, Tb: 91.95001, Vcr: 425.4445, Pen: 6.720626},
			{Component: "C8", MoleFraction: 0.005377355000000, MolMass: 107.873, Tcr: 566.089541, Pcr: 3.122868, WFact: 0.472542, Tb: 116.75, Vcr: 471.2443, Pen: 13.03526},
			{Component: "C9", MoleFraction: 0.003112627000000, MolMass: 121.873, Tcr: 587.838190, Pcr: 2.771944, WFact: 0.510256, Tb: 142.25, Vcr: 523.4991, Pen: 19.40622},
			{Component: "C10-C11", MoleFraction: 0.002447706000000, MolMass: 135.873, Tcr: 606.161317, Pcr: 2.50968, WFact: 0.616047, Tb: 175.324, Vcr: 600.5144, Pen: 15.12194},
			{Component: "C12-C13", MoleFraction: 0.001489821000000, MolMass: 149.873, Tcr: 622.276784, Pcr: 2.19141, WFact: 0.692018, Tb: 218.0582, Vcr: 712.9235, Pen: 19.6617},
			{Component: "C14-C15", MoleFraction: 0.001197856000000, MolMass: 163.873, Tcr: 636.905676, Pcr: 1.972617, WFact: 0.768374, Tb: 256.4565, Vcr: 838.2478, Pen: 20.81166},
			{Component: "C16-C18", MoleFraction: 0.001059873000000, MolMass: 177.873, Tcr: 650.497019, Pcr: 1.792949, WFact: 0.859284, Tb: 298.2033, Vcr: 1003.597, Pen: 17.46782},
			{Component: "C19-C20", MoleFraction: 0.000915890100000, MolMass: 191.873, Tcr: 663.342268, Pcr: 1.694122, WFact: 0.931732, Tb: 330.9889, Vcr: 1147.239, Pen: 10.17628},
			{Component: "C21-C24", MoleFraction: 0.000835899700000, MolMass: 205.873, Tcr: 675.637290, Pcr: 1.573101, WFact: 0.972036, Tb: 367.5937, Vcr: 1337.256, Pen: 9.111677},
			{Component: "C25-C29", MoleFraction: 0.000736911600000, MolMass: 219.873, Tcr: 687.517651, Pcr: 1.488414, WFact: 1.076324, Tb: 416.9652, Vcr: 1629.407, Pen: -14.2148},
			{Component: "C30-C35", MoleFraction: 0.000523937100000, MolMass: 233.873, Tcr: 699.079602, Pcr: 1.424685, WFact: 1.174966, Tb: 464.6909, Vcr: 1997.867, Pen: -49.8337},
			{Component: "C36-C80", MoleFraction: 0.000559932800000, MolMass: 247.873, Tcr: 710.393004, Pcr: 1.351062, WFact: 1.109354, Tb: 596.6096, Vcr: 3509.115, Pen: -186.03}},

		BIPs: []*pb.OneBIP{
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			{Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
			// {Num: []float64{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}},
		},
	}

	if err != nil {
		log.Fatalf("Array RPC failed: %v", err)
	}

	client.Init(context.Background(), &pb.InitMessageRequest{
		FLUID: inData.FLUID,
		BIPs:  inData.BIPs,
	})

	Ttest := makeRange(223, 408, 1)
	Ptest := makeRange(1., 61., 1.)

	// Создаем текстовый файл для параметров T, P и L
	file, err := os.Create("TP_L.txt")
	if err != nil {
		log.Fatalf("error creating file: %v", err)
	}
	defer file.Close()

	// Создаем текстовый файл для параметров T, P и SECONDS
	fileSeconds, err := os.Create("TP_SECONDS.txt")
	if err != nil {
		log.Fatalf("error creating fileSeconds: %v", err)
	}
	defer fileSeconds.Close()

	// начало алгоритма

	for _, temp := range Ttest {
		file.WriteString(fmt.Sprintf("%3.5f\t", temp))
		fileSeconds.WriteString(fmt.Sprintf("%3.5f\t", temp))
	}

	file.WriteString(fmt.Sprintf("\n"))
	fileSeconds.WriteString(fmt.Sprintf("\n"))

	for _, pres := range Ptest {
		file.WriteString(fmt.Sprintf("%3.5f\t", pres))
		fileSeconds.WriteString(fmt.Sprintf("%3.5f\t", pres))
		for _, temp := range Ttest {

			start := time.Now()
			result_vle, err := client.Vle(context.Background(), &pb.VleMessageRequest{Temp: temp, Pres: pres})
			if err != nil {
				log.Fatalf("VLE is not done: %v", err)
			}

			duration := time.Since(start)
			// вывод на консоль

			// вывод на консоль закончилось

			// создание файла началось
			// Записываем T, P и L в первый файл
			_, err = file.WriteString(fmt.Sprintf("%1.4f\t", 1-result_vle.L))
			if err != nil {
				log.Fatalf("error writing to file: %v", err)
			}

			// Записываем T, P и SECONDS во второй файл
			_, err = fileSeconds.WriteString(fmt.Sprintf("%1.7f\t", duration.Seconds()))
			if err != nil {
				log.Fatalf("error writing to fileSeconds: %v", err)
			}

			// создание файла закончилось

		}

		file.WriteString(fmt.Sprintf("\n"))
		fileSeconds.WriteString(fmt.Sprintf("\n"))
	}

}

func makeRange(min, max, step float64) []float64 {
	size := int((max-min)/step) + 1
	r := make([]float64, size)
	for i := range r {
		r[i] = min + float64(i)*step
	}
	return r
}
