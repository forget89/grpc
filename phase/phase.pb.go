// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.0--rc2
// source: phase.proto

package phase

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DivideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num1 float64 `protobuf:"fixed64,1,opt,name=Num1,proto3" json:"Num1,omitempty"`
	Num2 float64 `protobuf:"fixed64,2,opt,name=Num2,proto3" json:"Num2,omitempty"`
}

func (x *DivideRequest) Reset() {
	*x = DivideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phase_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DivideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DivideRequest) ProtoMessage() {}

func (x *DivideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_phase_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DivideRequest.ProtoReflect.Descriptor instead.
func (*DivideRequest) Descriptor() ([]byte, []int) {
	return file_phase_proto_rawDescGZIP(), []int{0}
}

func (x *DivideRequest) GetNum1() float64 {
	if x != nil {
		return x.Num1
	}
	return 0
}

func (x *DivideRequest) GetNum2() float64 {
	if x != nil {
		return x.Num2
	}
	return 0
}

type MultiplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num1 float64 `protobuf:"fixed64,1,opt,name=Num1,proto3" json:"Num1,omitempty"`
	Num2 float64 `protobuf:"fixed64,2,opt,name=Num2,proto3" json:"Num2,omitempty"`
}

func (x *MultiplyRequest) Reset() {
	*x = MultiplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phase_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiplyRequest) ProtoMessage() {}

func (x *MultiplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_phase_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiplyRequest.ProtoReflect.Descriptor instead.
func (*MultiplyRequest) Descriptor() ([]byte, []int) {
	return file_phase_proto_rawDescGZIP(), []int{1}
}

func (x *MultiplyRequest) GetNum1() float64 {
	if x != nil {
		return x.Num1
	}
	return 0
}

func (x *MultiplyRequest) GetNum2() float64 {
	if x != nil {
		return x.Num2
	}
	return 0
}

type ArrayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nums []float64 `protobuf:"fixed64,1,rep,packed,name=Nums,proto3" json:"Nums,omitempty"`
}

func (x *ArrayRequest) Reset() {
	*x = ArrayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phase_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayRequest) ProtoMessage() {}

func (x *ArrayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_phase_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayRequest.ProtoReflect.Descriptor instead.
func (*ArrayRequest) Descriptor() ([]byte, []int) {
	return file_phase_proto_rawDescGZIP(), []int{2}
}

func (x *ArrayRequest) GetNums() []float64 {
	if x != nil {
		return x.Nums
	}
	return nil
}

type ArrayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Array []float64 `protobuf:"fixed64,1,rep,packed,name=array,proto3" json:"array,omitempty"`
}

func (x *ArrayResponse) Reset() {
	*x = ArrayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phase_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayResponse) ProtoMessage() {}

func (x *ArrayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_phase_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayResponse.ProtoReflect.Descriptor instead.
func (*ArrayResponse) Descriptor() ([]byte, []int) {
	return file_phase_proto_rawDescGZIP(), []int{3}
}

func (x *ArrayResponse) GetArray() []float64 {
	if x != nil {
		return x.Array
	}
	return nil
}

type ArrayDivideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nums []float64 `protobuf:"fixed64,1,rep,packed,name=Nums,proto3" json:"Nums,omitempty"`
}

func (x *ArrayDivideRequest) Reset() {
	*x = ArrayDivideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phase_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayDivideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayDivideRequest) ProtoMessage() {}

func (x *ArrayDivideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_phase_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayDivideRequest.ProtoReflect.Descriptor instead.
func (*ArrayDivideRequest) Descriptor() ([]byte, []int) {
	return file_phase_proto_rawDescGZIP(), []int{4}
}

func (x *ArrayDivideRequest) GetNums() []float64 {
	if x != nil {
		return x.Nums
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response float64 `protobuf:"fixed64,1,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phase_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_phase_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_phase_proto_rawDescGZIP(), []int{5}
}

func (x *Response) GetResponse() float64 {
	if x != nil {
		return x.Response
	}
	return 0
}

type ArrayDivideResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Array []float64 `protobuf:"fixed64,1,rep,packed,name=array,proto3" json:"array,omitempty"`
}

func (x *ArrayDivideResponse) Reset() {
	*x = ArrayDivideResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phase_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayDivideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayDivideResponse) ProtoMessage() {}

func (x *ArrayDivideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_phase_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayDivideResponse.ProtoReflect.Descriptor instead.
func (*ArrayDivideResponse) Descriptor() ([]byte, []int) {
	return file_phase_proto_rawDescGZIP(), []int{6}
}

func (x *ArrayDivideResponse) GetArray() []float64 {
	if x != nil {
		return x.Array
	}
	return nil
}

type InitMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fluids []*InitMessageRequestFluid `protobuf:"bytes,1,rep,name=fluids,proto3" json:"fluids,omitempty"` // массив флюидов 22 штук
	Bips   []*InitMessageRequestFluid `protobuf:"bytes,2,rep,name=bips,proto3" json:"bips,omitempty"`
}

func (x *InitMessageRequest) Reset() {
	*x = InitMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phase_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitMessageRequest) ProtoMessage() {}

func (x *InitMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_phase_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitMessageRequest.ProtoReflect.Descriptor instead.
func (*InitMessageRequest) Descriptor() ([]byte, []int) {
	return file_phase_proto_rawDescGZIP(), []int{7}
}

func (x *InitMessageRequest) GetFluids() []*InitMessageRequestFluid {
	if x != nil {
		return x.Fluids
	}
	return nil
}

func (x *InitMessageRequest) GetBips() []*InitMessageRequestFluid {
	if x != nil {
		return x.Bips
	}
	return nil
}

type InitMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fluids []*InitMessageResponseFluid `protobuf:"bytes,1,rep,name=fluids,proto3" json:"fluids,omitempty"` // массив флюидов 22 штук
	Bips   []*InitMessageResponseBip   `protobuf:"bytes,2,rep,name=bips,proto3" json:"bips,omitempty"`
}

func (x *InitMessageResponse) Reset() {
	*x = InitMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phase_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitMessageResponse) ProtoMessage() {}

func (x *InitMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_phase_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitMessageResponse.ProtoReflect.Descriptor instead.
func (*InitMessageResponse) Descriptor() ([]byte, []int) {
	return file_phase_proto_rawDescGZIP(), []int{8}
}

func (x *InitMessageResponse) GetFluids() []*InitMessageResponseFluid {
	if x != nil {
		return x.Fluids
	}
	return nil
}

func (x *InitMessageResponse) GetBips() []*InitMessageResponseBip {
	if x != nil {
		return x.Bips
	}
	return nil
}

type VleMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Temp float64 `protobuf:"fixed64,1,opt,name=temp,proto3" json:"temp,omitempty"` // расчитывается 1 температура
	Pres float64 `protobuf:"fixed64,5,opt,name=pres,proto3" json:"pres,omitempty"` // расчитывается 1 давление
}

func (x *VleMessageRequest) Reset() {
	*x = VleMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phase_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VleMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VleMessageRequest) ProtoMessage() {}

func (x *VleMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_phase_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VleMessageRequest.ProtoReflect.Descriptor instead.
func (*VleMessageRequest) Descriptor() ([]byte, []int) {
	return file_phase_proto_rawDescGZIP(), []int{9}
}

func (x *VleMessageRequest) GetTemp() float64 {
	if x != nil {
		return x.Temp
	}
	return 0
}

func (x *VleMessageRequest) GetPres() float64 {
	if x != nil {
		return x.Pres
	}
	return 0
}

type VleMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DolyaLiquid     float64   `protobuf:"fixed64,1,opt,name=dolyaLiquid,proto3" json:"dolyaLiquid,omitempty"`                // 1-W = L
	CoefLiquid      float64   `protobuf:"fixed64,2,opt,name=coefLiquid,proto3" json:"coefLiquid,omitempty"`                  // Zl
	CoefGas         float64   `protobuf:"fixed64,3,opt,name=coefGas,proto3" json:"coefGas,omitempty"`                        // Zv
	DolyaCompLiquid []float64 `protobuf:"fixed64,4,rep,packed,name=dolyaCompLiquid,proto3" json:"dolyaCompLiquid,omitempty"` // x_i
	DolyaCompGas    []float64 `protobuf:"fixed64,5,rep,packed,name=dolyaCompGas,proto3" json:"dolyaCompGas,omitempty"`       // y_i
}

func (x *VleMessageResponse) Reset() {
	*x = VleMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phase_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VleMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VleMessageResponse) ProtoMessage() {}

func (x *VleMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_phase_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VleMessageResponse.ProtoReflect.Descriptor instead.
func (*VleMessageResponse) Descriptor() ([]byte, []int) {
	return file_phase_proto_rawDescGZIP(), []int{10}
}

func (x *VleMessageResponse) GetDolyaLiquid() float64 {
	if x != nil {
		return x.DolyaLiquid
	}
	return 0
}

func (x *VleMessageResponse) GetCoefLiquid() float64 {
	if x != nil {
		return x.CoefLiquid
	}
	return 0
}

func (x *VleMessageResponse) GetCoefGas() float64 {
	if x != nil {
		return x.CoefGas
	}
	return 0
}

func (x *VleMessageResponse) GetDolyaCompLiquid() []float64 {
	if x != nil {
		return x.DolyaCompLiquid
	}
	return nil
}

func (x *VleMessageResponse) GetDolyaCompGas() []float64 {
	if x != nil {
		return x.DolyaCompGas
	}
	return nil
}

type InitMessageRequestFluid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MolDolya     float64 `protobuf:"fixed64,2,opt,name=molDolya,proto3" json:"molDolya,omitempty"`
	MolecMass    float64 `protobuf:"fixed64,3,opt,name=molecMass,proto3" json:"molecMass,omitempty"`
	CriticalPres float64 `protobuf:"fixed64,4,opt,name=criticalPres,proto3" json:"criticalPres,omitempty"`
	CriticalTemp float64 `protobuf:"fixed64,5,opt,name=criticalTemp,proto3" json:"criticalTemp,omitempty"`
	Volume       float64 `protobuf:"fixed64,6,opt,name=volume,proto3" json:"volume,omitempty"` // критический объем не используем
	AFactor      float64 `protobuf:"fixed64,7,opt,name=aFactor,proto3" json:"aFactor,omitempty"`
	Shift        float64 `protobuf:"fixed64,8,opt,name=shift,proto3" json:"shift,omitempty"` // cpen в основном коде
}

func (x *InitMessageRequestFluid) Reset() {
	*x = InitMessageRequestFluid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phase_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitMessageRequestFluid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitMessageRequestFluid) ProtoMessage() {}

func (x *InitMessageRequestFluid) ProtoReflect() protoreflect.Message {
	mi := &file_phase_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitMessageRequestFluid.ProtoReflect.Descriptor instead.
func (*InitMessageRequestFluid) Descriptor() ([]byte, []int) {
	return file_phase_proto_rawDescGZIP(), []int{7, 0}
}

func (x *InitMessageRequestFluid) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InitMessageRequestFluid) GetMolDolya() float64 {
	if x != nil {
		return x.MolDolya
	}
	return 0
}

func (x *InitMessageRequestFluid) GetMolecMass() float64 {
	if x != nil {
		return x.MolecMass
	}
	return 0
}

func (x *InitMessageRequestFluid) GetCriticalPres() float64 {
	if x != nil {
		return x.CriticalPres
	}
	return 0
}

func (x *InitMessageRequestFluid) GetCriticalTemp() float64 {
	if x != nil {
		return x.CriticalTemp
	}
	return 0
}

func (x *InitMessageRequestFluid) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *InitMessageRequestFluid) GetAFactor() float64 {
	if x != nil {
		return x.AFactor
	}
	return 0
}

func (x *InitMessageRequestFluid) GetShift() float64 {
	if x != nil {
		return x.Shift
	}
	return 0
}

type InitMessageRequestBip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bip float64 `protobuf:"fixed64,1,opt,name=bip,proto3" json:"bip,omitempty"` // bip двумерный массив  {ci, cj} {0, 0}
}

func (x *InitMessageRequestBip) Reset() {
	*x = InitMessageRequestBip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phase_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitMessageRequestBip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitMessageRequestBip) ProtoMessage() {}

func (x *InitMessageRequestBip) ProtoReflect() protoreflect.Message {
	mi := &file_phase_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitMessageRequestBip.ProtoReflect.Descriptor instead.
func (*InitMessageRequestBip) Descriptor() ([]byte, []int) {
	return file_phase_proto_rawDescGZIP(), []int{7, 1}
}

func (x *InitMessageRequestBip) GetBip() float64 {
	if x != nil {
		return x.Bip
	}
	return 0
}

type InitMessageResponseFluid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MolDolya     float64 `protobuf:"fixed64,2,opt,name=molDolya,proto3" json:"molDolya,omitempty"`
	MolecMass    float64 `protobuf:"fixed64,3,opt,name=molecMass,proto3" json:"molecMass,omitempty"`
	CriticalPres float64 `protobuf:"fixed64,4,opt,name=criticalPres,proto3" json:"criticalPres,omitempty"`
	CriticalTemp float64 `protobuf:"fixed64,5,opt,name=criticalTemp,proto3" json:"criticalTemp,omitempty"`
	Volume       float64 `protobuf:"fixed64,6,opt,name=volume,proto3" json:"volume,omitempty"` // критический объем не используем
	AFactor      float64 `protobuf:"fixed64,7,opt,name=aFactor,proto3" json:"aFactor,omitempty"`
	Shift        float64 `protobuf:"fixed64,8,opt,name=shift,proto3" json:"shift,omitempty"` // cpen в основном коде
}

func (x *InitMessageResponseFluid) Reset() {
	*x = InitMessageResponseFluid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phase_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitMessageResponseFluid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitMessageResponseFluid) ProtoMessage() {}

func (x *InitMessageResponseFluid) ProtoReflect() protoreflect.Message {
	mi := &file_phase_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitMessageResponseFluid.ProtoReflect.Descriptor instead.
func (*InitMessageResponseFluid) Descriptor() ([]byte, []int) {
	return file_phase_proto_rawDescGZIP(), []int{8, 0}
}

func (x *InitMessageResponseFluid) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InitMessageResponseFluid) GetMolDolya() float64 {
	if x != nil {
		return x.MolDolya
	}
	return 0
}

func (x *InitMessageResponseFluid) GetMolecMass() float64 {
	if x != nil {
		return x.MolecMass
	}
	return 0
}

func (x *InitMessageResponseFluid) GetCriticalPres() float64 {
	if x != nil {
		return x.CriticalPres
	}
	return 0
}

func (x *InitMessageResponseFluid) GetCriticalTemp() float64 {
	if x != nil {
		return x.CriticalTemp
	}
	return 0
}

func (x *InitMessageResponseFluid) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *InitMessageResponseFluid) GetAFactor() float64 {
	if x != nil {
		return x.AFactor
	}
	return 0
}

func (x *InitMessageResponseFluid) GetShift() float64 {
	if x != nil {
		return x.Shift
	}
	return 0
}

type InitMessageResponseBip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bip float64 `protobuf:"fixed64,1,opt,name=bip,proto3" json:"bip,omitempty"` // bip двумерный массив  {ci, cj} {0, 0}
}

func (x *InitMessageResponseBip) Reset() {
	*x = InitMessageResponseBip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phase_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitMessageResponseBip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitMessageResponseBip) ProtoMessage() {}

func (x *InitMessageResponseBip) ProtoReflect() protoreflect.Message {
	mi := &file_phase_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitMessageResponseBip.ProtoReflect.Descriptor instead.
func (*InitMessageResponseBip) Descriptor() ([]byte, []int) {
	return file_phase_proto_rawDescGZIP(), []int{8, 1}
}

func (x *InitMessageResponseBip) GetBip() float64 {
	if x != nil {
		return x.Bip
	}
	return 0
}

var File_phase_proto protoreflect.FileDescriptor

var file_phase_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70,
	0x68, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a, 0x0d, 0x44, 0x69,
	0x76, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x75, 0x6d, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x4e, 0x75, 0x6d, 0x31, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x75, 0x6d, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x4e,
	0x75, 0x6d, 0x32, 0x22, 0x39, 0x0a, 0x0f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x75, 0x6d, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x4e, 0x75, 0x6d, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x75,
	0x6d, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x4e, 0x75, 0x6d, 0x32, 0x22, 0x22,
	0x0a, 0x0c, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x4e, 0x75,
	0x6d, 0x73, 0x22, 0x25, 0x0a, 0x0d, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x01, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x22, 0x28, 0x0a, 0x12, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x4e,
	0x75, 0x6d, 0x73, 0x22, 0x26, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x0a, 0x13, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x01, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x22, 0x8f, 0x03, 0x0a, 0x12, 0x69, 0x6e, 0x69,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3d, 0x0a, 0x06, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e,
	0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x52, 0x06, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x73, 0x12, 0x39,
	0x0a, 0x04, 0x62, 0x69, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70,
	0x68, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x69, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x66, 0x6c,
	0x75, 0x69, 0x64, 0x52, 0x04, 0x62, 0x69, 0x70, 0x73, 0x1a, 0xe5, 0x01, 0x0a, 0x05, 0x66, 0x6c,
	0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x6c, 0x44, 0x6f,
	0x6c, 0x79, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x6f, 0x6c, 0x44, 0x6f,
	0x6c, 0x79, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x4d, 0x61, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x4d, 0x61, 0x73,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x50, 0x72, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x63, 0x72, 0x69,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x61, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x68, 0x69, 0x66, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x68, 0x69, 0x66,
	0x74, 0x1a, 0x17, 0x0a, 0x03, 0x62, 0x69, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x62, 0x69, 0x70, 0x22, 0x90, 0x03, 0x0a, 0x13, 0x69,
	0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x69, 0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x52, 0x06, 0x66, 0x6c, 0x75, 0x69,
	0x64, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x62, 0x69, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69,
	0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x62, 0x69, 0x70, 0x52, 0x04, 0x62, 0x69, 0x70, 0x73, 0x1a, 0xe5, 0x01, 0x0a,
	0x05, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f,
	0x6c, 0x44, 0x6f, 0x6c, 0x79, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x6f,
	0x6c, 0x44, 0x6f, 0x6c, 0x79, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x4d,
	0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6d, 0x6f, 0x6c, 0x65, 0x63,
	0x4d, 0x61, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x50, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c,
	0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x61, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x68, 0x69, 0x66, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73,
	0x68, 0x69, 0x66, 0x74, 0x1a, 0x17, 0x0a, 0x03, 0x62, 0x69, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x62,
	0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x62, 0x69, 0x70, 0x22, 0x3b, 0x0a,
	0x11, 0x76, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x70, 0x72, 0x65, 0x73, 0x22, 0xbe, 0x01, 0x0a, 0x12, 0x76,
	0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x6c, 0x79, 0x61, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x6f, 0x6c, 0x79, 0x61, 0x4c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x65, 0x66, 0x4c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x65, 0x66, 0x4c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x65, 0x66, 0x47, 0x61, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x65, 0x66, 0x47, 0x61, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x64, 0x6f, 0x6c, 0x79, 0x61, 0x43, 0x6f, 0x6d, 0x70, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x01, 0x52, 0x0f, 0x64, 0x6f, 0x6c, 0x79, 0x61, 0x43, 0x6f, 0x6d,
	0x70, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x6f, 0x6c, 0x79, 0x61,
	0x43, 0x6f, 0x6d, 0x70, 0x47, 0x61, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x01, 0x52, 0x0c, 0x64,
	0x6f, 0x6c, 0x79, 0x61, 0x43, 0x6f, 0x6d, 0x70, 0x47, 0x61, 0x73, 0x32, 0xb5, 0x03, 0x0a, 0x10,
	0x50, 0x68, 0x61, 0x73, 0x65, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x75, 0x6d,
	0x12, 0x3b, 0x0a, 0x06, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x68, 0x61,
	0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x08, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x2e, 0x70, 0x68, 0x61, 0x73,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x05, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x19, 0x2e, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50,
	0x0a, 0x0b, 0x41, 0x72, 0x72, 0x61, 0x79, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x12, 0x1f, 0x2e,
	0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x49, 0x0a, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x1f, 0x2e, 0x70, 0x68, 0x61, 0x73, 0x65,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x68, 0x61, 0x73,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x03, 0x76,
	0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_phase_proto_rawDescOnce sync.Once
	file_phase_proto_rawDescData = file_phase_proto_rawDesc
)

func file_phase_proto_rawDescGZIP() []byte {
	file_phase_proto_rawDescOnce.Do(func() {
		file_phase_proto_rawDescData = protoimpl.X.CompressGZIP(file_phase_proto_rawDescData)
	})
	return file_phase_proto_rawDescData
}

var file_phase_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_phase_proto_goTypes = []interface{}{
	(*DivideRequest)(nil),            // 0: phase_proto.DivideRequest
	(*MultiplyRequest)(nil),          // 1: phase_proto.MultiplyRequest
	(*ArrayRequest)(nil),             // 2: phase_proto.ArrayRequest
	(*ArrayResponse)(nil),            // 3: phase_proto.ArrayResponse
	(*ArrayDivideRequest)(nil),       // 4: phase_proto.ArrayDivideRequest
	(*Response)(nil),                 // 5: phase_proto.Response
	(*ArrayDivideResponse)(nil),      // 6: phase_proto.ArrayDivideResponse
	(*InitMessageRequest)(nil),       // 7: phase_proto.initMessageRequest
	(*InitMessageResponse)(nil),      // 8: phase_proto.initMessageResponse
	(*VleMessageRequest)(nil),        // 9: phase_proto.vleMessageRequest
	(*VleMessageResponse)(nil),       // 10: phase_proto.vleMessageResponse
	(*InitMessageRequestFluid)(nil),  // 11: phase_proto.initMessageRequest.fluid
	(*InitMessageRequestBip)(nil),    // 12: phase_proto.initMessageRequest.bip
	(*InitMessageResponseFluid)(nil), // 13: phase_proto.initMessageResponse.fluid
	(*InitMessageResponseBip)(nil),   // 14: phase_proto.initMessageResponse.bip
}
var file_phase_proto_depIdxs = []int32{
	11, // 0: phase_proto.initMessageRequest.fluids:type_name -> phase_proto.initMessageRequest.fluid
	11, // 1: phase_proto.initMessageRequest.bips:type_name -> phase_proto.initMessageRequest.fluid
	13, // 2: phase_proto.initMessageResponse.fluids:type_name -> phase_proto.initMessageResponse.fluid
	14, // 3: phase_proto.initMessageResponse.bips:type_name -> phase_proto.initMessageResponse.bip
	0,  // 4: phase_proto.PhaseEqualibrium.Divide:input_type -> phase_proto.DivideRequest
	1,  // 5: phase_proto.PhaseEqualibrium.Multiply:input_type -> phase_proto.MultiplyRequest
	2,  // 6: phase_proto.PhaseEqualibrium.Array:input_type -> phase_proto.ArrayRequest
	4,  // 7: phase_proto.PhaseEqualibrium.ArrayDivide:input_type -> phase_proto.ArrayDivideRequest
	7,  // 8: phase_proto.PhaseEqualibrium.init:input_type -> phase_proto.initMessageRequest
	9,  // 9: phase_proto.PhaseEqualibrium.vle:input_type -> phase_proto.vleMessageRequest
	5,  // 10: phase_proto.PhaseEqualibrium.Divide:output_type -> phase_proto.Response
	5,  // 11: phase_proto.PhaseEqualibrium.Multiply:output_type -> phase_proto.Response
	3,  // 12: phase_proto.PhaseEqualibrium.Array:output_type -> phase_proto.ArrayResponse
	6,  // 13: phase_proto.PhaseEqualibrium.ArrayDivide:output_type -> phase_proto.ArrayDivideResponse
	8,  // 14: phase_proto.PhaseEqualibrium.init:output_type -> phase_proto.initMessageResponse
	10, // 15: phase_proto.PhaseEqualibrium.vle:output_type -> phase_proto.vleMessageResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_phase_proto_init() }
func file_phase_proto_init() {
	if File_phase_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_phase_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DivideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phase_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phase_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phase_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phase_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayDivideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phase_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phase_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayDivideResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phase_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phase_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phase_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VleMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phase_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VleMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phase_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitMessageRequestFluid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phase_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitMessageRequestBip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phase_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitMessageResponseFluid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phase_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitMessageResponseBip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_phase_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_phase_proto_goTypes,
		DependencyIndexes: file_phase_proto_depIdxs,
		MessageInfos:      file_phase_proto_msgTypes,
	}.Build()
	File_phase_proto = out.File
	file_phase_proto_rawDesc = nil
	file_phase_proto_goTypes = nil
	file_phase_proto_depIdxs = nil
}
